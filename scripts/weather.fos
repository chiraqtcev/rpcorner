// Weather module by Kriegwolf

#include "_macros.fos"

#define WEATHER_CHANGE_TIME (10)
#define RAIN_INCREASE_TIME  (1)
#define WIND_SOUND_TIME		(60)

bool mapIsAboveGround (Map& map) {
	switch (map.GetProtoId()) {
		case 174:
		case 173:
		case 172:
		case 171:
			return true;
	}
	return false;
}

void initWeather (Map& map, bool firstTime) {
	CreateTimeEvent (__FullSecond + WEATHER_CHANGE_TIME, "changeWeather", map.Id, false);
}

uint changeWeather (uint[]@ values) {
	Map@[] allMaps;
	int mapLength = allMaps.length();
	int i = 0;
	int k = 0;
	int isRaining = Random (0, 9);
	uint8 rainIntensity = 5;
	if (isRaining != 0) rainIntensity = 0;
	int windStrength = Random (0, 3);
	string windFunc = "wind" + windStrength;
	while (k < 200) {
		mapLength = GetAllMaps (k, allMaps);
		while (i < mapLength) {
			if (mapIsAboveGround (allMaps[i])) {
				allMaps[i].SetRain (rainIntensity);
				if (isRaining == 0) CreateTimeEvent (__FullSecond + 1, "increaseRain", allMaps[i].Id, false);
				allMaps[i].SetEvent (MAP_EVENT_LOOP_3, windFunc);
				allMaps[i].SetLoopTime (MAP_EVENT_LOOP_3, WIND_SOUND_TIME);
			}
			i ++;
		}
		k ++;
	}
	return WEATHER_CHANGE_TIME;
}

uint increaseRain (uint[]@ values) {
	Map@ map = GetMap (values [0]);
	uint8 rainIntensity = map.GetRain();
	if (rainIntensity > Random (0, 500)) rainIntensity = 0;
	else if (rainIntensity <= 250) rainIntensity += 5;
	Location@ loc = map.GetLocation ();
	Map@[] allMaps;
	loc.GetMaps (allMaps);
	int mapLength = allMaps.length();
	int i = 0;
	while (i < mapLength) {
		if (mapIsAboveGround (allMaps[i])) allMaps[i].SetRain (rainIntensity);
		i ++;
	}
	if (rainIntensity == 0) return 0;
	return RAIN_INCREASE_TIME;
}

void wind0 (Map& map) {
}

void wind1 (Map& map) {
}

void wind2 (Map& map) {
}

void wind3 (Map& map) {
}
