#ifndef SANDBAG
#define SANDBAG

#include "_utils.fos"
#include "sandbag_h.fos"
#include "speed_h.fos"

bool SandbagCheck( Critter& cr, Item@ sandbag, Item@ target )
{
    Map@ map = cr.GetMap();
    if( !valid( map ) ) { return false; }
	if( !valid( sandbag ) && !valid( target ) ) { return false; }
	
	uint16 sandbagPid = sandbag.GetProtoId();
	if( sandbagPid != PID_SINGLE_SANDBAG ) { return false; }
	
    uint16 targetPid = target.GetProtoId();
	uint16 index = Sandbags.find( targetPid );
	
	if(	index == -1 ) { return false; }
	
	Critter@[] critters; 
	map.GetCrittersHex( target.HexX, target.HexY, 0, FIND_LIFE_AND_KO, critters );
	if( critters.length() > 0 ) {
		cr.Say( SAY_NETMSG, "|0xFFFF00 Существо мешает установить мешки." );
		return false;
	}
	
	Item@[] shadows;
	if( map.GetItems( target.HexX, target.HexY, shadows ) > 0 ) {
		for( uint i = 0; i < shadows.length(); i++ ) {
			if( shadows[i].GetProtoId() == PID_SHADOW ) {
				cr.Say( SAY_NETMSG, "|0xFFFF00 Вышедший в оффлайн игрок на этой точке мешает установить мешки." );
				return false;
			}
		}
	}
	
	if( index == Sandbags.length() -1 ) {
		cr.Say( SAY_NETMSG, "|0xFFFF00 Вы не можете сделать эту груду мешков выше." );
		return false;
	}
	AddSandbag( cr, sandbag, target );
	return true;
}

bool AddSandbag( Critter& cr, Item& sandbag, Item& target )
{
	if( valid( sandbag ) && valid( target ) ) {	
		uint16 targetPid = target.GetProtoId();
		uint16 index = Sandbags.find( targetPid );
		if( index < Sandbags.length() -1 ) {
			_SubItem( sandbag, 1 );
			target.ChangeProto( Sandbags[index + 1] );
			if( target.GetProtoId() == PID_QUINTO_SANDBAG ) {
				UNSETFLAG( target.Flags, ITEM_SHOOT_THRU );
				UNSETFLAG( target.Flags, ITEM_LIGHT_THRU );
			}
			target.Update();
		}
		return true;
	}
	return false;
}

bool TakeSandbag( Critter& cr, Item& sandbag )
{
	uint16 sandbagPid = sandbag.GetProtoId();
	uint16 index = Sandbags.find( sandbagPid );
	if(	index == -1 ) {
		return false;
	} else if( index <= Sandbags.length() && index != 0 ) {
		
		int freeWeight = cr.Stat[ ST_CARRY_WEIGHT ] - cr.ItemsWeight();
		ProtoItem@ sandBagProto = GetProtoItem( PID_SINGLE_SANDBAG );
		if( !valid( sandBagProto ) ) { return false; }
			
		if( freeWeight < int( sandBagProto.Weight ) ) {
			cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_OVERWEIGHT );
			return false;
		}
		
		if( sandbag.GetProtoId() == PID_QUINTO_SANDBAG ) {
			SETFLAG( sandbag.Flags, ITEM_SHOOT_THRU );
			SETFLAG( sandbag.Flags, ITEM_LIGHT_THRU );
		}
		
		cr.AddItem( PID_SINGLE_SANDBAG, 1 );
		sandbag.ChangeProto( Sandbags[index - 1] );
		sandbag.Update();
	} else {
		PickItem( cr, sandbag );
		ChangeCritterSpeed( cr );
	}
	return true;
}

#endif //SANDBAG