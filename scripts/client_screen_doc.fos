// doctor screen

#include "client_gui_h.fos"
#include "_client_defines.fos"
#include "_macros.fos"
#include "_colors.fos"


#define STR_DAMAGE    ( 1050 )

void showScreen( int param0, int param1, int param2, string@ param3, int[] @ param4 )
{
    ShowScreen( CLIENT_SCREEN_DOC, param0, param1, param2 );
}

class ScreenDoc : IGUIScreenCallbackShow, IGUIScreenCallbackHide
{
    // IGUIElementOpt@[] buttons;
    // FastButton@ fastBtn;

    uint16 CrId;
    uint16 TargetId;

    void OnShow( int p0, int p1, int p2 )
    {
        CrId = p0;
        TargetId = p1;
    }

    void OnHide( int p0, int p1, int p2 )
    {}
}

class DocButton : IGUIElementCallbackInit, IGUIElementCallbackMouseClick
{
    ScreenDoc@ Instance;
    IGUIElementOpt @ thisBtn;

    uint8 Type;

    DocButton( ScreenDoc & instance, uint8 type )
    {
        @Instance = instance;
        Type = type;
    }

    void OnInit()
    {
        @thisBtn = GUI_GetElementOptions();
    }

    void OnMouseClick( int click )
    {
        if( click == MOUSE_CLICK_LEFT )
        {
            HideScreen( CLIENT_SCREEN_DOC, 0, 0, 0 );
            ChangeCursor( CURSOR_DEFAULT );
            RunServerScriptUnsafe( "heal@unsafe_doc", Type + 500, Instance.TargetId, 0, "", null );

        }
    }
}

void InitScreenDoc() // export
{
    ScreenDoc screen;
    GUI_CreateScreen( CLIENT_SCREEN_DOC, "textbox_fastskill_back.png" )
    .CallbackHide( screen )
    .CallbackShow( screen )
    .CloseOnMiss( true )
    .CanMove( true )
    .AutoCursor( true, CURSOR_DEFAULT );

    // uint8 j = 0;
    uint16 axist = 0;

    for( uint16 i = 2; i <= 7; i++ )
    {
        DocButton docBtn( screen, i );
        GUI_AddScreenElement( CLIENT_SCREEN_DOC, "chosen_tab.png", 5, 10 + axist )
        .CallbackInit( docBtn )
        .CallbackMouseClick( docBtn )
        .DownPic( "chosen_tab.png" )
        .Text( GetMsgStr( TEXTMSG_GAME, STR_DAMAGE * 100 + ( i * 10 ) + 1 ), FONT_FALLOUT, COLOR_SAND, COLOR_GREEN, FT_CENTERX | FT_CENTERY );


        // j++;
        axist += 20;
    }
}
