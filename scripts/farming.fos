// Author: Anuri

#ifndef FARMING
#define FARMING

#include "_utils.fos"
#include "farming_h.fos"

//=========PLANT_GROWTH_LENGTH==========//
int CheckStageTime( uint16 pid )
{
	switch( pid )
	{
		case( PID_RADCVET_RIPE):
		case( PID_CABBAGE_RIPE ):
		case( PID_CORN_RIPE ):
			return 36;
		case( PID_CABBAGE_SMALL ):
		case( PID_RADCVET_SMALL ):
		case( PID_CORN_YOUNG ):
			return 12;
		case( PID_SEEDLING_TONGUE_GECKO ):
		case( PID_SEEDLING_MURAVNIKTAR ):
		case( PID_SEEDLING_BLACK_MUSHROOMS ):
		case( PID_SEEDLING_PALE_MUSHROOM ):
		case( PID_SEEDLING_MUTMUSH ):
			return 10;
		case( PID_RISING_TONGUE_GECKO ):
		case( PID_RISING_MURAVNIKTAR ):
		case( PID_RISING_BLACK_MUSHROOMS ):
		case( PID_RISING_PALE_MUSHROOM ):
		case( PID_PID_RISING_MUTMUSH ):
			return 5;
		default:
			return 4;
	}
	return -1;
}

//~run gm speedupPlants value 0 0
///ћожно использовать команду дл€ тестов - ускорени€ роста. 
///√де value - количество секунд на каждую стадию роста.
uint getStageTime( Item& plant )
{
	GameVar@ speedUpPlants = GetGlobalVar( GVAR_speedUpPlants );		
	if( !valid( speedUpPlants ) || speedUpPlants.GetValue() == 0 ) {
		uint16 pid = plant.GetProtoId();
		int stageTime = CheckStageTime( pid );
		return REAL_HOUR( stageTime ); 
	}
	return( REAL_SECOND( speedUpPlants.GetValue() ) );
}

//=========PLANT_RESOURCE_CAPACITY==========//
void IncreaseCrop( Item& item, int amount )
{
	for( int i = 0; i < amount ; i++ ) {
		if( Random( 0, 1 ) == 1 ) {
			item.RESOURCE_CAPACITY ++;
		}
	}
}

#endif // FARMING