//‘ункции, позвол€ющие сделать более ”√Ћ”ЅЋ≈ЌЌџ≈ квесты
#include "_global_events.fos"

#include "_macros.fos"
#include "_maps.fos"

import bool IsDoorAutomatic( uint pid ) from "map_sutter_objects";

#define PID_MOTEL_KEY    ( 823 )
#define ANYDATA_MOTEL	"ANYDATA_MOTEL"
// add to ITEM_PID.H

// uint8 keyNumberLex = 0;

/*Функция вызывается так:
Выбираем вкладку Условие/Результат(в зависимости от того, что нам нужно) и прописываем в [Скрипт (модуль@функция)] следующее: 1_dialogs@(название функции), например 1_dialogs@npc_knock_100
*/

//Кнок нпц на 100 ОД
void npc_knock_100( Critter& cr, Critter@ target ){
	target.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ? true : false ) ), 100, target.HexX, target.HexY );
}
//Кнок игрока на 100 ОД
void player_knock_100( Critter& cr, Critter@ target ){
	cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ? true : false ) ), 100, cr.HexX, cr.HexY );
}
//Вырывание бока НПЦ
void dead_1( Critter& cr, Critter@ target ){
	target.ToDead( ANIM2_DEAD_BLOODY_SINGLE, null );
}
//Ролл для игрока
void player_roll( Critter& cr, Critter@ target ){
	cr.ParamBase[ ROLL ] = Random(1, 100);
	cr.Say( SAY_NETMSG, "ролл игрока: "+cr.ParamBase[ ROLL ] );
}
//Ролл для нпц
void npc_roll( Critter& cr, Critter@ target ){
	target.ParamBase[ ROLL ] = Random(1, 100);
	cr.Say( SAY_NETMSG, "ролл нпц: "+target.ParamBase[ ROLL ] );
}

    /*
       switch(param1)
       {
       case	1 : deadType = ANIM2_DEAD_BLOODY_SINGLE; break;
       case	2 : deadType = ANIM2_DEAD_BLOODY_BURST; break;
       case	3 : deadType = ANIM2_DEAD_BURST; break;
       case	4 : deadType = ANIM2_DEAD_PULSE_DUST; break;
       case	5 : deadType = ANIM2_DEAD_EXPLODE; break;
       case	6 : deadType = ANIM2_DEAD_BURN_RUN;break;
       case	7 : deadType = ANIM2_DEAD_FUSED;break;
       case	8 : deadType = ANIM2_DEAD_LASER;break;
       default : deadType = (Random(0,1) > 0 ? ANIM2_DEAD_FRONT : ANIM2_DEAD_BACK); break;
       }*/