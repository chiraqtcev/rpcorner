#include "_client_defines.fos"
import void GUI_GetActiveScreens( int[]& result ) from "client_gui";

dictionary Screens;

void LoadScreensDict()
{
    // Primaryscreens,hardcoded
    Screens.set( "MAIN_SCREEN_GAME", 5 );
    Screens.set( "MAIN_SCREEN_GLOBAL_MAP", CLIENT_MAIN_SCREEN_GLOBAL_MAP );
// Screens.set("MAIN_SCREEN_GLOBAL_MAP",6);
    // Secondaryscreens,hardcoded
    Screens.set( "INVENTORY", 10 );
    Screens.set( "MINIMAP", 12 );
    Screens.set( "CHARACTER", 13 );
    Screens.set( "PIP_BOY", 16 );
    Screens.set( "FIX_BOY", 17 );
    Screens.set( "MENU", 18 );
    Screens.set( "SKILLBOX", 30 );

}

int FindInArray( int[]& arr, int value )
{
    uint count = arr.length();
    for( uint i = 0; i < count; i++ )
    {
        if( arr[ i ] == value )
            return i;
    }
    return -1;
}

bool RunClientCommand( string type, string command, int[] @ param4 )
{

    if( type == "SCREEN" )
    {
        int[] ActiveScreens;
        GUI_GetActiveScreens( ActiveScreens );
        if( command == "MENU" )
        {
            if( ActiveScreens.length() > 1 )
            {
                HideScreen( ActiveScreens[ ActiveScreens.length() - 1 ], 0, 0, 0 );
                return true;
            }
        }
        int Screen;
        Screens.get( command, Screen );
        if( ( FindInArray( ActiveScreens, Screen ) == -1 )  ||  ( ( ActiveScreens.length() > 2 ) && ( ActiveScreens[ ActiveScreens.length() - 1 ] != Screen ) ) )
            ShowScreen( Screen, 0, 0, 0 );
        else
            HideScreen( Screen, 0, 0, 0 );

        return true;
    }
    else if( type == "COMMANDLINE" )
    {
        /*if(command == "SHOUT")
              __MessagePrefix = ".s";
            else if (command == "WHISPER")
              __MessagePrefix = ".w";
            else if (command == "RADIO")
              __MessagePrefix = ".r";
            else*/if( command == "EMOTE" )
            __MessagePrefix = ".e";
        return false;
    }
    else if( type == "" )
    {
        if( command == "SHOW_PLAYER_NAMES" )
            __ShowPlayerNames = !__ShowPlayerNames;
        else if( command == "SHOW_NPC_NAMES" )
            __ShowNpcNames = !__ShowNpcNames;
        else if( command == "SHOW_TIMEOUTS" )
        {
            __ShowTimeouts = !__ShowTimeouts;
        }
    }


    return true;
}

bool RunServerCommand( string type, string command, int[] @ params )
{
    RunServerScriptUnsafe( "general_unsafe@unsafe_hotkey_command", 0, 0, 0, command + "*" + type, params );
    return true;
}
