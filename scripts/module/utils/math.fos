
float cutLesserDigits( float val, int depth = 2, bool ceiled = true )
{
	//Log("Cutting '" + val + "'.");
	for( int i = 0; i < depth; i++)
		val *= 10;

	val = ceiled ? ceil( val ) : floor( val );
	
	for( int i = 0; i < depth; i++)
		val /= 10;
		
	return val;
}

float cutDigits( float val, int depth = 2, bool ceiled = true )
{
	//Log("Cutting '" + val + "'.");
	int d = 0;
	float len = pow( 10, depth - 1 );
	if( val < len )
		while( val < len )
		{
			val *= 10;
			d++;
		}
	else if( val > len )
		while( val > len )
		{
			val /= 10;
			d--;
		}
		
	val = ceiled ? ceil( val ) : floor( val );
	
	if( d > 0 )
		while( d > 0 )
		{
			val /= 10;
			d--;
		}
	else if( d < 0 )
		while( d < 0 )
		{
			val *= 10;
			d++;
		}
		
	return val;
}

int MinIndex( float[] a )
{
	if( a.length() == 0 ) return -1;
	
	int result = 0;
	float min = a[0];
	for( uint i = 0, l = a.length(); i < l; i++ )
	{
		if( a[i] < min )
		{
			min = a[i];
			result = i;
		}
	}
	return result;
}

float Distance( float x1, float y1, float x2, float y2 )
{
	return sqrt( pow( x1 - x2, 2 ) + pow( y1 - y2, 2 ) );
}
