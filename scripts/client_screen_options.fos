// options menu screen
// pm

#include "_client_defines.fos"
#include "client_gui_h.fos"
#include "_colors.fos"
#include "_defines.fos"
#include "_macros.fos"

IGUIScreenOpt@ optionsScreen;

class          ScreenMain : IGUIScreenCallbackShow, IGUIScreenCallbackHide
{
    ScreenMain()
    {}

    void OnShow( int p0, int p1, int p2 )
    {}

    void OnHide( int p0, int p1, int p2 )
    {}
}

class RolledButton : IGUIElementCallbackInit, IGUIElementCallbackMouseClick
{
    ScreenMain@     Instance;
    IGUIElementOpt@ Options;
    RolledItem@     rolledItem;

    /*union RolledItem
       {
            IGUIElementOptions@ Options;

            RolledItem()
            {
            }

            void OnInit()
            {
                    @Options = GUI_GetElementOpt();
            }

            void OnMouseClick(int click)
            {
            }
       }*/

    RolledButton( ScreenMain & instance, string itemPic, uint16 x, uint16 y )
    {
        @Instance = instance;
        // @rolledItem = RolledItem();

        @rolledItem = RolledItem( instance, this );
        GUI_AddScreenElement( CLIENT_SCREEN_OPTIONS_TNF, itemPic, x, y )
        .CallbackInit( rolledItem )
        .CallbackMouseClick( rolledItem );
        // .DownPic("cancelh.frm");
    }

    void OnInit()
    {
        @Options = GUI_GetElementOptions();
    }

    void OnMouseClick( int click )
    {
        int16 x = __MouseX - ( optionsScreen.GetPosX() /* - Options.GetPosX()*/ ), y = __MouseY - ( optionsScreen.GetPosY() + Options.GetPosY() );
        // Message("mouse "+x+":"+y+"\nscreen "+optionsScreen.GetPosX()+":"+optionsScreen.GetPosY()+"\nline "+Options.GetPosX()+":"+Options.GetPosY()+"\nitem "+rolledItem.Options.GetPosX()+":"+rolledItem.Options.GetPosY());

        int16 percents = ( Options.GetSurfaceWidth() * ( x * 0.01 ) );

        Message( "" + percents );
        rolledItem.Options.Position( x, rolledItem.Options.GetPosY() );
    }
}

class RolledItem : IGUIElementCallbackInit, IGUIElementCallbackMouseClick
{
    ScreenMain@     Instance;
    RolledButton@   RolledBtn;
    IGUIElementOpt@ Options;

    RolledItem( ScreenMain & instance, RolledButton & rolledButton )
    {
        @Instance = instance;
        @RolledBtn = rolledButton;
    }

    void OnInit()
    {
        @Options = GUI_GetElementOptions();
    }

    void OnMouseClick( int click )
    {}
}


void InitOptMenuScreen() // Export
{
    // Main screen
    ScreenMain screenMain();
    @optionsScreen = GUI_CreateScreen( CLIENT_SCREEN_OPTIONS_TNF, "menu_cont.png" )
                     .CallbackHide( screenMain )
                     .CallbackShow( screenMain )
                     .CloseOnMiss( false )
                     .CanMove( false )
                     .AutoCursor( true, CURSOR_DEFAULT );

    RolledButton rolledButton( screenMain, "scrollitem.png", 0, 50 );
    GUI_AddScreenElement( CLIENT_SCREEN_OPTIONS_TNF, "scrollline.png", 0, 50 )
    .CallbackInit( rolledButton )
    .CallbackMouseClick( rolledButton );
    // .Text("ALL",FONT_FALLOUT,COLOR_SAND, COLOR_GREEN,FT_CENTERX|FT_CENTERY)
    // .DownPic("cancelh.frm");
}
