//Функции, позволяющие сделать более широкие… возможности в квесте
#include "_global_events.fos"

#include "_utils.fos"

/*Функция вызывается так:
Выбираем вкладку условие/результат(в зависимости от того, что нам нужно) и прописываем в [скрипт (модуль@функция)] следующее: 1_dialogs@(название функции), например 1_dialogs@npc_knock_100
*/

//Кнок нпц на 100 од
void npc_knock_100( Critter& cr, Critter@ target )
{
	target.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ? true : false ) ), 100, target.HexX, target.HexY );
}
//Кнок игрока на 100 од
void player_knock_100( Critter& cr, Critter@ target )
{
	cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( ( Random( 0, 1 ) == 1 ? true : false ) ), 100, cr.HexX, cr.HexY );
}
//Вырывание бока НПЦ
void dead_1( Critter& cr, Critter@ target )
{
	target.ToDead( ANIM2_DEAD_BLOODY_SINGLE, null );
}
//Ролл длЯ игрока
void player_roll( Critter& cr, Critter@ target )
{
	cr.ParamBase[ CR_ROLL ] = Random(1, 100);
	cr.Say( SAY_NETMSG, "ролл игрока: "+cr.ParamBase[ CR_ROLL ] );
}
//Ролл длЯ нпц
void npc_roll( Critter& cr, Critter@ target )
{
	target.ParamBase[ CR_ROLL ] = Random(1, 100);
	cr.Say( SAY_NETMSG, "ролл нпц: "+target.ParamBase[ CR_ROLL ] );
}
//Инвентарь нпц
void npc_inv( Critter& cr, Critter@ target )
{
	ShowContainer( cr, target, TRANSFER_FAR_CRIT );
}