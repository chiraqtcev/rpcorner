// Author: TabaK

#include "_macros.fos"
#include "_ltp.fos"
/*import void InjureCritter(Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId) from "combat";*/
import bool IsNotHuman( Critter& cr ) from "handcuffs";

void _itemInit( Item& item, bool FirstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "_reanimate" );
}

bool _reanimate( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
    if( !valid( onCritter ) || ( IsNotHuman( onCritter ) ) ) {
        return false;
    }

    if( onCritter.IsLife() && ( !IsNotHuman( onCritter ) ) ) {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12923 );
        return true;
    }

	if( onCritter.ParamBase[ CR_DEATH_STAGE ] >= 50) {
		cr.Say( SAY_NETMSG, "|0xFFFF00 Дефибриллятор тут не поможет." );
		return false;
	}

    if( cr.Skill[ SK_DOCTOR ] + cr.Skill[ SK_FIRST_AID ] + cr.Skill[ SK_SCIENCE ] < 200 && ( !IsNotHuman( onCritter ) ) ) {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12920 );
        return true;
	}
	
    if( onCritter.IsDead() && ( !IsNotHuman( onCritter ) ) ) {
		if( cr.CountItem( PID_SMALL_ENERGY_CELL ) >= 3 ) {
			cr.DeleteItem( PID_SMALL_ENERGY_CELL, 3 );
			cr.Say( SAY_NETMSG, "Вы заряжаете дефибриллятор." );
		} else {
			cr.Say( SAY_NETMSG, "Вам нужно 3 обычных малых батареек для зарядки дефибриллятора." );
			return true;
		}

		if( !ltp_defib_inited ) {
            ltp_defib_init();
		}
		
        uint16 rndTime = 15000 - ( cr.Skill[ SK_DOCTOR ] * 40 );
        StartProcess( cr, LTP_DEFIB, onCritter.Id, 0, 0, rndTime );
        cr.Say( SAY_EMOTE, "Заряжает дефибриллятор" );
        return true;
    }
    return false;
}


// ltp add

bool ltp_defib_inited = false;

void ltp_defib_init()
{
    LTPREG( LTP_DEFIB, process_defib )
    ltp_defib_inited = true;
}

uint process_defib( Critter@ cr, int& param0, int& param1, int& param2 )
{
    LTPROCESSD( LTP_DEFIB )

    Critter @ onCritter = GetCritter( param0 );
    if( @onCritter == null ) {
        return 0;
	}
	
    if( onCritter.Anim2Dead <= ANIM2_DEAD_BACK && onCritter.Stat[ST_MAX_LIFE] > 50 ) {
        Map@ map = onCritter.GetMap();

		for( int dx = -1; dx < 2; dx++ ) {
			for( int dy = -1; dy < 2; dy++ ) {
				if( map.IsHexPassed( onCritter.HexX + dx, onCritter.HexY + dy ) ) {
					onCritter.TransitToHex( onCritter.HexX + dx, onCritter.HexY + dy, onCritter.Dir );
					break;
				}
			}
		}
				
		onCritter.ToLife();
		onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 1000, onCritter.HexX, onCritter.HexY );

		onCritter.StatBase[ST_MAX_LIFE] -= 10;
	
		cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12921 );
		
        if( onCritter.IsNpc() ) {
            onCritter.EraseEnemyFromStack( cr.Id );
			
			onCritter.SetScript( null );
			onCritter.ParamBase[ ST_FACTION ] = cr.ParamBase[ ST_FACTION ];
			onCritter.ParamBase[ MERC_MASTER_ID ] = int( cr.Id );
			
			cr.Say( SAY_NETMSG, "|0xFFFF00 Вы спасли цель с того света. Теперь она вам жизнью обязана." );
			if( onCritter.Param[ ST_BODY_TYPE ] < BT_BRAHMIN )
			{
				onCritter.StatBase[ ST_DIALOG_ID ] = DIALOG_mod_trader_vendor;
				onCritter.ModeBase[ MODE_NO_TALK ] = 0;
				onCritter.ModeBase[ MODE_NO_BARTER ] = 0;
				onCritter.ModeBase[ MODE_NO_LOOT ] = 0;
				onCritter.ModeBase[ MODE_NO_STEAL ] = 0;
				onCritter.ModeBase[ MODE_NO_PUSH ] = 0;
				onCritter.ModeBase[ MODE_NO_HOME ] = 1;
				onCritter.ModeBase[ MODE_UNLIMITED_AMMO ] = 0;
				onCritter.ModeBase[ MODE_INVULNERABLE ] = 0;
				onCritter.ModeBase[ MODE_NO_LOOSE_LIMBS ] = 0;
				onCritter.ModeBase[ MODE_NO_KNOCK ] = 0;
				onCritter.ModeBase[ MODE_NO_PVP ] = 0;
			}
		}
        return 0;
    } else {
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 12922 );
        return 0;
    }
}
