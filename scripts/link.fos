# ifdef __SERVER
// =============== SERVER ===============

// import void OpenLinkRemote( Critter& player, string& url) from "link";

void OpenLinkRemote( Critter& player, string& url) {
    player.RunClientScript( "link@OpenLinkRemote", 0, 0, 0, url, null );
}

// void PlayerAuth(Critter&)
void unsafe_PlayerAuth( Critter& player, int, int, int, string@, int[]@ ) {
    PlayerAuth(player);
}

// TODO: send auth key directly
void RequestStartGameRemote( Critter& player) {
    player.RunClientScript( "link@RequestStartGameRemote", 0, 0, 0, null, null );
}

# endif

# ifdef __CLIENT
// =============== CLIENT ===============

// void OpenLink(string&)

void OpenLinkRemote (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    if( @p3 != null) {
        OpenLink(p3);
    }
}

// void OpenLinkAuth(string&, int, int, int)

void OpenWithKey (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    if (_UrlAuthRequest is null) {
        Message("Unexpected open request from server.");
        return;
    }
    if (_UrlPrefixWeb is null) {
        Message("Server didn't sent web server url.");
        return;
    }
    OpenLinkAuth(_UrlPrefixWeb+_UrlAuthRequest, p0, p1, p2);
    @_UrlAuthRequest = null;
}

string@ _UrlPrefixWeb = null;
string@ _UrlPrefixOverlay = null;
string@ _UrlAuthRequest = null;

void UpdateUrl (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    if(p3 !is null) {
        string@[] parts = split(p3, "|");
        if( parts.length() == 2 ){
            Message("Получены адреса веб сервера:");
            Message(parts[0]);
            Message(parts[1]);
            @ _UrlPrefixWeb = parts[0];
            @ _UrlPrefixOverlay = parts[1];
            return;
        } else if( parts.length() == 1 ){
            Message("Получен адрес веб сервера:");
            Message(parts[0]);
            @ _UrlPrefixWeb = parts[0];
            @ _UrlPrefixOverlay = parts[0];
            return;
        }
    }
    Message("Получен некорректный адрес веб сервера.");
}

// import string@ UrlPrefix() from "link";
string@ UrlPrefixOverlay() {
    return _UrlPrefixOverlay;
}

void RequestWebsiteAuth(CritterCl& player) {
    @_UrlAuthRequest = "/char/"+player.Id+"/edit/avatar";
    RunServerScriptUnsafe( "link@unsafe_PlayerAuth", 0, 0, 0, null, null );
}

void RequestStartGame(CritterCl& player) {
    @_UrlAuthRequest = "/char/"+player.Id+"/action/start_game";
    RunServerScriptUnsafe( "link@unsafe_PlayerAuth", 0, 0, 0, null, null );
}

// TODO: remove
void RequestStartGameRemote (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    CritterCl@ char = GetChosen();
    if (char is null) {
        Message("Chosen is null, can't auth");
        return;
    }
    RequestStartGame(char);
}

# endif
