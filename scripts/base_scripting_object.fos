//Starting point of scripting objects
//by Jonathan Joestar

#include "_defines.fos"
#include "scripting_object.fos"

import Lookup@ getClassesLookup() from "scripting_objects_lookup";

void _ScriptingItemInit( Item& item, bool FirstTime )
{
	item.SetEvent( ITEM_EVENT_FINISH, "_itemEventFinish" );
	item.SetEvent( ITEM_EVENT_ATTACK, "_itemEventAttack" );
	item.SetEvent( ITEM_EVENT_USE, "_itemEventUse" );
	item.SetEvent( ITEM_EVENT_USE_ON_ME, "_itemEventUseOn" );
	item.SetEvent( ITEM_EVENT_SKILL, "_itemEventSkill" );
	item.SetEvent( ITEM_EVENT_DROP, "_itemEventDrop" );
	item.SetEvent( ITEM_EVENT_MOVE, "_itemEventMove" );
	item.SetEvent( ITEM_EVENT_WALK, "_itemEventWalk" );
}

void _itemEventFinish(Item& item, bool deleted)
{
	getClassesLookup().lookup(item.GetProtoId()).itemFinish(item, deleted);
}

bool _itemEventAttack(Item& item, Critter& crit, Critter& target)
{
	return getClassesLookup().lookup(item.GetProtoId()).itemAttack(item, crit, target);
}

bool _itemEventUse(Item& item, Critter& crit, Critter@ onCritter, Item@ onItem, Scenery@ onScenery)	
{
	return getClassesLookup().lookup(item.GetProtoId()).itemUse(item, crit, onCritter, onItem, onScenery);
}

bool _itemEventUseOn(Item& item, Critter& crit, Item@ usedItem)
{
	return getClassesLookup().lookup(item.GetProtoId()).itemUseOn(item, crit, usedItem);
}

bool _itemEventSkill(Item& item, Critter& crit, int skill)
{
	return getClassesLookup().lookup(item.GetProtoId()).itemSkillUse(item, crit, skill);
}

void _itemEventDrop(Item& item, Critter& crit)
{
	getClassesLookup().lookup(item.GetProtoId()).itemDrop(item, crit);
}

void _itemEventMove(Item& item, Critter& crit, uint8 fromSlot)
{
	getClassesLookup().lookup(item.GetProtoId()).itemMove(item, crit, fromSlot);
}

void _itemEventWalk(Item& item, Critter& crit, bool entered, uint8 dir)
{
	getClassesLookup().lookup(item.GetProtoId()).itemWalk(item, crit, entered, dir);
}	