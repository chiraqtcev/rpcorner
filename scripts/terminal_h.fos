#ifndef TERMINAL_H
#define TERMINAL_H

	#define TERMINAL_POWERED				Val0				// Запитан или нет - access to powergrid
	#define TERMINAL_FLAG					Val1				// Валка для идентификации типа терминала через флаг

	#define FENCE_GROUP						Val5 				// Группа заборов, на которую распространяется терминал.
	#define PASSWORD						Val6 				// Пароль для доступа - access password
	#define ACTIVE_AUTODOC					Val7				// Подписанный автодок
	#define CONSOLE_PASSWORD				Val8 				// Блокировка терминала - password block
	#define ACCESS_CARD						Val9 				// Пид для записи карты терминала

	#define PASSWORD_DISABLED				( 0 )				// Отключен запрет доступа без пароля
	#define PASSWORD_ENABLED				( 1 )				// Включен запрет досутпа без пароля

	#define TERMINAL_LASER_FENCE			( 0x00000001 ) 		// Умеет управлять заборами
	#define TERMINAL_TURRETS				( 0x00000002 )		// Умеет управлять турелями
	#define TERMINAL_ACCESS_CARDS			( 0x00000004 )		// Умеет управлять картами доступа
	#define TERMINAL_PASSWORD_PROTECTION	( 0x00000008 )		// Можно установить пароль
	#define TERMINAL_AUTODOC				( 0x00000010 )		// Управление Автодоком
	
	const uint16[] TerminalKeyCards = { PID_TERMINAL_RED_KEY, PID_TERMINAL_BLUE_KEY, PID_TERMINAL_YELLOW_KEY, PID_TERMINAL_TECH1_KEY, PID_TERMINAL_TECH2_KEY, PID_TERMINAL_CARD_KEY, PID_TERMINAL_METAL_KEY, PID_TERMINAL_PLASTIC_KEY, PID_TERMINAL_ADVANCED_KEY };

	#ifndef TERMINAL
		import void StartMenuTerminal( Critter& cr, Item& terminal ) from "terminal";
		import bool TransferToTerminal( Critter& cr, Item& targetItem, Item& cont ) from "terminal";
		import bool TransferFromTerminal( Critter& cr, Item& targetItem, Item& cont ) from "terminal";
	#endif // TERMINAL
		
#endif // TERMINAL_H