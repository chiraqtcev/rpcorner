#include "_macros.fos"
#include "_global_events.fos"

class Patcher : iManagerModule, // iManager_loop,
      iManager_critter_init     // , iManager_critter_finish,
// iManager_critter_idle, iManager_critter_dead, iManager_critter_respawn,
// iManager_map_critter_in, iManager_map_critter_out,
// iManager_world_save, iManager_player_registration, iManager_player_login, iManager_time
{
    Patcher()
    {
        // AddStartCallback("<название скрипта>","start");
    }
    bool manager_init()
    {
        // вызывается в порядке приоритетов
        return true;
    }
    // uint global_loop()
    // {
    // return uint(-1);
    // }
    bool global_critter_init( Critter& cr, bool firstTime )
    {
        if( cr.IsPlayer() )
        {
            GameVar@ locs_cleared = GetLocalVar( LVAR_locs_cleared, cr.Id );
            if( locs_cleared !is null && locs_cleared.GetValue() == 0 )
            {
                Location@[]  locations;
                uint len = GetAllLocations( 0, locations );

                for( uint i = 0; i < len; i++ )
                {
                    Location@ loc = locations[ i ];
                    if( loc is null )
                        continue;

                    loc.Visible = false;
                    loc.GeckVisible = false;

                    if( cr.IsKnownLoc( true, loc.Id ) )
                        cr.UnsetKnownLoc( true, loc.Id );
                }

                locs_cleared = 1;
            }
        }

        return true;
    }
    // bool global_critter_finish(Critter& cr, bool toDelete)
    // {
    // return true;
    // }
    // bool global_critter_idle(Critter& cr)
    // {
    // return true;
    // }
    // bool global_critter_dead(Critter& cr, Critter@ killer)
    // {
    // return true;
    // }
    // bool global_critter_respawn(Critter& cr)
    // {
    // return true;
    // }
    // bool global_map_critter_in(Map& map, Critter& cr)
    // {
    // return true;
    // }
    // bool global_map_critter_out(Map& map, Critter& cr)
    // {
    // return true;
    // }
    // bool global_world_save()
    // {
    // return true;
    // }
    // bool global_player_registration(uint ip, string& name, uint& textMsg, uint& strNum)
    // {
    // return true;
    // }
    // bool global_player_login(uint ip, string& name, uint id, uint& textMsg, uint& strNum)
    // {
    // return true;
    // }
    // bool global_time(int8 type)
    // {
    // /*
    // if((type&0xF)>=TIME_NEW_<MINUTE/HOUR/DAY/MONTH/YEAR>)
    // {
    // ...
    // }
    // if(FLAG(type, TIME_NEW_WEEK))
    // {
    // ...
    // }
    // */
    // return true;
    // }
}

Patcher patcher;

void start()
{
    iManagerModule@  module = patcher;
    iManagerElement@ manager = manager_add_module( module, "Patcher", 150 );   // чем выше значение приоритета - тем раньше будут вызываться обработчики ивэнтов
    if( manager is null )
        return;
}
